{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.js","path":"main.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/style.js","path":"style.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1474905757000},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1474905757000},{"_id":"themes/yilia/README.md","hash":"dd311f8e8696bd89cf1790328d12b49d0e6b36da","modified":1474905757000},{"_id":"themes/yilia/_config.yml","hash":"49844619c3633d620845e1d183289ad6d95b257c","modified":1474970970000},{"_id":"themes/yilia/package.json","hash":"b51e6fbf715c974367fe46fd9377d8495f6c8622","modified":1474905757000},{"_id":"themes/yilia/webpack.config.js","hash":"ccf5929d2727b00e76266f9f5d6edc0bc74539dc","modified":1474905757000},{"_id":"source/_posts/first-article.md","hash":"63abb8403bf3b601764199ae497421aa19160c93","modified":1474902932000},{"_id":"source/_posts/git入门级-在github创建项目.md","hash":"e3ecfd01a36d383ca03be19d576c22765f081644","modified":1472572164000},{"_id":"source/_posts/gulp实现hexoMarkDown同步编译.md","hash":"88172ab23aec69b0c8a98740a5bf055c04a49efe","modified":1472572164000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1472572164000},{"_id":"source/_posts/hexo-基础操作.md","hash":"d4672115db3c1819437f76a29585f3d5b9e04580","modified":1474907371000},{"_id":"source/_posts/晒一晒我的prefernces-sublime-setting.md","hash":"26c0814e0d5ea7fccb0212ecf544072a7a2c7a21","modified":1475767821000},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1474905757000},{"_id":"themes/yilia/.git/config","hash":"256e47c5a4386e6881318e44d2a716fdc3197863","modified":1474905757000},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1474905645000},{"_id":"themes/yilia/.git/index","hash":"9e1ee10096e56ef94224baa21f7544c1c9505fbd","modified":1474906513000},{"_id":"themes/yilia/.git/packed-refs","hash":"da91538826ece2ebda53cb5a4a634ce558cc28c1","modified":1474905757000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1474905757000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1474905757000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1474905757000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1474905757000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1474905757000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1474905757000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1474905757000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1474905757000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1474905757000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1474905757000},{"_id":"themes/yilia/layout/layout.ejs","hash":"18bc94a020c6e74b0a7a29bc412670605e0c0873","modified":1474905757000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1474905757000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1474905757000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1474905757000},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1474905645000},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1474905645000},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1474905645000},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1474905645000},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1474905645000},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1474905645000},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1474905645000},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1474905645000},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1474905645000},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1474905645000},{"_id":"themes/yilia/.git/logs/HEAD","hash":"f31fa535eab04271ca1062c7518af4ca2b5a5adf","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"8bbedf112605c8aeca10b6e09cfe32f444675282","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"567706eb5fcb8b61101ad44742122ec7b34c5a04","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"88620efeea181f12cecc44edb8735cfa34ba0052","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"d78993618051392103df1107c0da5abb81e2acac","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"256f83ef8bc7bdc8f69617e606fe1118136b5208","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"324f809c7d1505cbf1ef3a479782c67ae90dfa81","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c5b92f83828e41a891c6db1d3e63cd2e007034e0","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"6255dfde4a65a191f15f13d4f535a3ef91d45a1f","modified":1474905757000},{"_id":"themes/yilia/source/main.js","hash":"9564ebaff9fb17e4911ba30cb1da63be8a1a64e9","modified":1474905757000},{"_id":"themes/yilia/source/style.js","hash":"3ffa5ca74d270754f874160463874d85b6a3d5d2","modified":1474905757000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1474905757000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1474905757000},{"_id":"themes/yilia/source-src/css/archive-inner.scss","hash":"1d58b3e22486d700228d3668744655dd38466728","modified":1474905757000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"b750499d5120f963b683d0c96ac3f345c714e448","modified":1474905757000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"4edb98e196eac9e67f86b76e39a2a03673391842","modified":1474905757000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"000a5875e1e46116b824c9ac0657178093ce4a17","modified":1474905757000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"d046414a96adc400b54897fc236b3272e6deeafd","modified":1474905757000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"b1add6b3c05416ac854ec5dd9d4cc20be3fafc1f","modified":1474905757000},{"_id":"themes/yilia/source-src/css/duoshuo.scss","hash":"1a4be8634b8dcf271cebad1feb687e96a038ffbf","modified":1474905757000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"f5ee21869fcd3e2b257b49b0f680c78763d416dd","modified":1474905757000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1474905757000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1474905757000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"fe592c32cc2e6462358ac907e1e38a0dad01219f","modified":1474905757000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"819774a2979d0d94eb4e3ebf62afc96f803bac67","modified":1474905757000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"2a261fa2e402909a866c648a5de8eb287da6fba9","modified":1474905757000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"5ffabb8323ff8cd26be466c7e02a6affc0f08da7","modified":1474905757000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"4277e4b7e8fef5480d8e2b9574cbfdf59f0225c8","modified":1474905757000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"b5aeba588894f8f73b1162d627b873776549835b","modified":1474905757000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1474905757000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1474905757000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"5b4a2cfd8a26687dc7bc44a4fa55ebb7d1ffe363","modified":1474905757000},{"_id":"themes/yilia/source-src/css/style.js","hash":"6c4cb072d0d5cbbb5291aa255dee31c7b13cfe66","modified":1474905757000},{"_id":"themes/yilia/source-src/css/switch.scss","hash":"795b0d1ad5ff278933409a1ab7451483fe6ceae5","modified":1474905757000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1474905757000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"79d3fad4fcda15210410774089b0ee7fe8d58810","modified":1474905757000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"c92aa91195696d1f2e5280a8db358593068e5e76","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/jquery.fancybox.js","hash":"cc7aac9c95508fbf004efa201007102c87b18f54","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/jquery.fancybox.scss","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1474905757000},{"_id":"themes/yilia/source-src/js/archive-inner.js","hash":"76dc705f483dc476144eee1d0a6d362e62300bb8","modified":1474905757000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"8ca48b006591bbf6d75688637c14fd1b5bdd650f","modified":1474905757000},{"_id":"themes/yilia/source-src/js/fix-page.js","hash":"f18e33e99b1032b95a60b018960bed64235c1a29","modified":1474905757000},{"_id":"themes/yilia/source-src/js/main.js","hash":"90c0a34796fb52543b298bc1d4d39928306c6177","modified":1474905757000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"0e623bcb904d5856b393a65fcf24d0ac3fc3032f","modified":1474905757000},{"_id":"themes/yilia/source-src/js/tags.js","hash":"f259b3f808df3a8523a42978f922bb9eda76e0ee","modified":1474905757000},{"_id":"themes/yilia/source-src/js/tools.js","hash":"ed69771cd501770c2c303ae6ae695d2a9a187cdd","modified":1474905757000},{"_id":"themes/yilia/source-src/js/util.js","hash":"28c66c54cab81b2a6c8c393226f5bd30f369e1bb","modified":1474905757000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"09d5e64f4937e00f06c2215c538efafa7a221112","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe-ui-default.js","hash":"724162c14e5722a2ce1f44cf086dcea7b6855b80","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe-ui-default.min.js","hash":"38557bef17c33e172bc8e1670cd302d91622dfad","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.min.js","hash":"e3267f5ae23f00c1ae052d019f12787296e34afc","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.scss","hash":"838d43529282b91a60934bbd39f3f9f5dbefee98","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.js","hash":"ff9e3cc58b44a61144a9e211503755b170c24e91","modified":1474905757000},{"_id":"themes/yilia/.git/objects/pack/pack-cef498d93376744b07ed935af574e726980bcb27.idx","hash":"a041c49088d36e843c48c57a362375311c1597ef","modified":1474905757000},{"_id":"themes/yilia/.git/refs/heads/master","hash":"d923501cd4ac613bf93ba1a42daf6ea20c5edebc","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"62cde65a4ab7aef85a4390308bc7608f59463e02","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"2ab4308d013dcb1f0898cf112e3f75573e597e33","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"d9fa04c06319510bd088ca9c286af947da3cfb38","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"a59c83e46aaccb053b60bb41369dfcd6848cbd69","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"3a44b657ebdeed1764d90f81b43e91e5a8f25c21","modified":1474905757000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1474905757000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1474905757000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"6f44ec8ff32515280c0b7ea8ad7e4cb5f4dfcd84","modified":1474905757000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"dc89a3b360881584838cdd9b95fe88aae6518e50","modified":1474905757000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1474905757000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1474905757000},{"_id":"themes/yilia/source-src/css/fonts/icomoon.eot","hash":"9a661069e1255d10032926a8ef87502f445f4e20","modified":1474905757000},{"_id":"themes/yilia/source-src/css/fonts/icomoon.svg","hash":"56ba63db8bfe20347e0457b4c583dd18e29ca701","modified":1474905757000},{"_id":"themes/yilia/source-src/css/fonts/icomoon.ttf","hash":"9f1e824fc076dbfedf186609a2664558d5e3e986","modified":1474905757000},{"_id":"themes/yilia/source-src/css/fonts/icomoon.woff","hash":"a5c2eb785800a3a0aeaf2284d191d69df1893d6d","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/black-scales.png","hash":"243ea748d016704922ccfc0b6c18d97472c27bff","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1474905757000},{"_id":"themes/yilia/source-src/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.scss","hash":"91f44576a5f5ccff4740ff5020656bd2f00ca13c","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1474905757000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1474905757000},{"_id":"themes/yilia/source-src/css/img/black-paper.png","hash":"a180d3109a5cb6b9b9aa60d81730446ebe275473","modified":1474905757000},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"f31fa535eab04271ca1062c7518af4ca2b5a5adf","modified":1474905757000},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1474905757000},{"_id":"themes/yilia/source-src/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1474905757000},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"f31fa535eab04271ca1062c7518af4ca2b5a5adf","modified":1474905757000},{"_id":"source/_posts/public/img/prefernces-sublime-setting.png","hash":"a889fe8e053ff7f204cb31e58c4ce18b99c65d83","modified":1475767530000},{"_id":"themes/yilia/.git/objects/pack/pack-cef498d93376744b07ed935af574e726980bcb27.pack","hash":"78b64af2f0841f5c7e6dcc28281881efdf73af6e","modified":1474905757000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"first article","date":"2016-05-02T05:32:43.000Z","_content":"* this is my first article by hexo \n","source":"_posts/first-article.md","raw":"---\ntitle: first article\ndate: 2016-05-02 13:32:43\ntags:\n---\n* this is my first article by hexo \n","slug":"first-article","published":1,"updated":"2016-09-26T15:15:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cityijzg00000ghxmneenwbad","content":"<ul>\n<li>this is my first article by hexo </li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>this is my first article by hexo </li>\n</ul>\n"},{"title":"gulp实现hexoMarkDown同步编译","date":"2016-05-14T09:02:07.000Z","_content":"**作为一个前端，作为一个具有捣(zhuang)鼓(bi)精神的前端，心想着得有一个可以写写技术文章的地方呀！于是就开始玩起了hexo。**\n\n虽然说Markdown设计之初就是为了方便作者快捷的写作。但是作为一个有强迫症的前端，写了一段总想看看写成了什么样子，但无奈看一眼得切到命令行bash输入\n``` javascript\nhexo generate //缩写 hexo g\n```\n在hexo编译完成后又切到浏览器刷新查看。心想，这不行啊，这样子怎么对得起捣(zhuang)鼓(bi)精神。于是就想着在里面加入gulp的想法。话不多说，下面就上代码。\n\n## 安装gulp\n和hexo一样gulp也是需要全局安装的\n``` bash\nnpm i gulp -g\n```\n\n## 安装gulp-shell\ngulp并没有hexo的组件，所以这里选择使用gulp-shell来实现。\n``` bash\nnpm i -D gulp-shell\n```\n\n## 编写gulpfile.js文件\n新建并打开gulpfile.js\n``` bash\nvim gulpfile.js\n```\n编写gulp代码,引入gulp、gulp-shell和gulp-notify\n``` javaScript\nvar gulp = require('gulp');\nvar shell = require('gulp-shell');//bash输入\nvar notify = require('gulp-notify');//系统通知\n```\n编写默认任务\n``` javaScript\ngulp.task(\"default\",function(){\n  gulp.src(\"./public/index.html\")\n    .pipe(shell([\n      'hexo g'\n    ]))\n    .pipe(notify('hexo编译完成！'));\n});\n```\n可以在bash里使用`gulp`来启动默认任务\n\n之前有用过gulp的同学可能会发现我gulp的src方法获取的地址只是一个文件，而且也没有指向source文件夹下的.md文件，这是因为这里根本不需要src方法来得到文件流。这里需要的只是其后的pipe方法来运行shell方法。\n然而gulp-shell还提供了另一种方法来执行\n``` javaScript\ngulp.task('default', shell.task([\n  'hexo g'\n]));\n```\n只是这样的方法却是不能接pipe方法也就不能使用notify的系统通知了。权衡之下，我选择了前者。\n\n## 编写watch任务\nwatch任务会监听指定文件的变更来触发默认任务\n``` javaScript\ngulp.task('watch',function(){\n  gulp.watch(\"./source/*/*md\",['default']);\n})\n```\n在bash里使用`gulp watch`来启动watch任务\n在编写完watch任务后，尽管已经解决了自动构建，但是本地调试却需要另一个bash界面来开启hexo的服务。\n于是，我还需要一个server任务来启动服务\n\n## 编写server任务\n``` javaScript\ngulp.task('server',shell.task([\n  'hexo server'\n]));\n```\n在bash里使用 `gulp server`来启动server任务\n于是这里就可以改写watch任务\n``` javaScript\ngulp.task('watch',function(){\n  gulp.start('server');\n  gulp.watch(\"./source/*/*md\",['default']);\n})\n```\n这样就可以在启动watch任务的时候也开启本地服务了。\n到了这一步，就可以在bash命令行输入\n``` bash\ngulp watch\n```\n回车后就可以开始边写边看了\n\n**这里还缺少了自动刷新的功能，这个功能使用我之前的方法并不能起到作用，还需要再思考思考**\n\n好了，我的第一篇技术文章就这么结束了，哈哈。\n","source":"_posts/gulp实现hexoMarkDown同步编译.md","raw":"---\ntitle: gulp实现hexoMarkDown同步编译\ndate: 2016-05-14 17:02:07\ntags:\n---\n**作为一个前端，作为一个具有捣(zhuang)鼓(bi)精神的前端，心想着得有一个可以写写技术文章的地方呀！于是就开始玩起了hexo。**\n\n虽然说Markdown设计之初就是为了方便作者快捷的写作。但是作为一个有强迫症的前端，写了一段总想看看写成了什么样子，但无奈看一眼得切到命令行bash输入\n``` javascript\nhexo generate //缩写 hexo g\n```\n在hexo编译完成后又切到浏览器刷新查看。心想，这不行啊，这样子怎么对得起捣(zhuang)鼓(bi)精神。于是就想着在里面加入gulp的想法。话不多说，下面就上代码。\n\n## 安装gulp\n和hexo一样gulp也是需要全局安装的\n``` bash\nnpm i gulp -g\n```\n\n## 安装gulp-shell\ngulp并没有hexo的组件，所以这里选择使用gulp-shell来实现。\n``` bash\nnpm i -D gulp-shell\n```\n\n## 编写gulpfile.js文件\n新建并打开gulpfile.js\n``` bash\nvim gulpfile.js\n```\n编写gulp代码,引入gulp、gulp-shell和gulp-notify\n``` javaScript\nvar gulp = require('gulp');\nvar shell = require('gulp-shell');//bash输入\nvar notify = require('gulp-notify');//系统通知\n```\n编写默认任务\n``` javaScript\ngulp.task(\"default\",function(){\n  gulp.src(\"./public/index.html\")\n    .pipe(shell([\n      'hexo g'\n    ]))\n    .pipe(notify('hexo编译完成！'));\n});\n```\n可以在bash里使用`gulp`来启动默认任务\n\n之前有用过gulp的同学可能会发现我gulp的src方法获取的地址只是一个文件，而且也没有指向source文件夹下的.md文件，这是因为这里根本不需要src方法来得到文件流。这里需要的只是其后的pipe方法来运行shell方法。\n然而gulp-shell还提供了另一种方法来执行\n``` javaScript\ngulp.task('default', shell.task([\n  'hexo g'\n]));\n```\n只是这样的方法却是不能接pipe方法也就不能使用notify的系统通知了。权衡之下，我选择了前者。\n\n## 编写watch任务\nwatch任务会监听指定文件的变更来触发默认任务\n``` javaScript\ngulp.task('watch',function(){\n  gulp.watch(\"./source/*/*md\",['default']);\n})\n```\n在bash里使用`gulp watch`来启动watch任务\n在编写完watch任务后，尽管已经解决了自动构建，但是本地调试却需要另一个bash界面来开启hexo的服务。\n于是，我还需要一个server任务来启动服务\n\n## 编写server任务\n``` javaScript\ngulp.task('server',shell.task([\n  'hexo server'\n]));\n```\n在bash里使用 `gulp server`来启动server任务\n于是这里就可以改写watch任务\n``` javaScript\ngulp.task('watch',function(){\n  gulp.start('server');\n  gulp.watch(\"./source/*/*md\",['default']);\n})\n```\n这样就可以在启动watch任务的时候也开启本地服务了。\n到了这一步，就可以在bash命令行输入\n``` bash\ngulp watch\n```\n回车后就可以开始边写边看了\n\n**这里还缺少了自动刷新的功能，这个功能使用我之前的方法并不能起到作用，还需要再思考思考**\n\n好了，我的第一篇技术文章就这么结束了，哈哈。\n","slug":"gulp实现hexoMarkDown同步编译","published":1,"updated":"2016-08-30T15:49:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cityijzg40001ghxm7juosvku","content":"<p><strong>作为一个前端，作为一个具有捣(zhuang)鼓(bi)精神的前端，心想着得有一个可以写写技术文章的地方呀！于是就开始玩起了hexo。</strong></p>\n<p>虽然说Markdown设计之初就是为了方便作者快捷的写作。但是作为一个有强迫症的前端，写了一段总想看看写成了什么样子，但无奈看一眼得切到命令行bash输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate <span class=\"comment\">//缩写 hexo g</span></div></pre></td></tr></table></figure></p>\n<p>在hexo编译完成后又切到浏览器刷新查看。心想，这不行啊，这样子怎么对得起捣(zhuang)鼓(bi)精神。于是就想着在里面加入gulp的想法。话不多说，下面就上代码。</p>\n<h2 id=\"安装gulp\"><a href=\"#安装gulp\" class=\"headerlink\" title=\"安装gulp\"></a>安装gulp</h2><p>和hexo一样gulp也是需要全局安装的<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i gulp -g</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装gulp-shell\"><a href=\"#安装gulp-shell\" class=\"headerlink\" title=\"安装gulp-shell\"></a>安装gulp-shell</h2><p>gulp并没有hexo的组件，所以这里选择使用gulp-shell来实现。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i -D gulp-shell</div></pre></td></tr></table></figure></p>\n<h2 id=\"编写gulpfile-js文件\"><a href=\"#编写gulpfile-js文件\" class=\"headerlink\" title=\"编写gulpfile.js文件\"></a>编写gulpfile.js文件</h2><p>新建并打开gulpfile.js<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim gulpfile.js</div></pre></td></tr></table></figure></p>\n<p>编写gulp代码,引入gulp、gulp-shell和gulp-notify<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> shell = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-shell'</span>);<span class=\"comment\">//bash输入</span></div><div class=\"line\"><span class=\"keyword\">var</span> notify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-notify'</span>);<span class=\"comment\">//系统通知</span></div></pre></td></tr></table></figure></p>\n<p>编写默认任务<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">\"default\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">\"./public/index.html\"</span>)</div><div class=\"line\">    .pipe(shell([</div><div class=\"line\">      <span class=\"string\">'hexo g'</span></div><div class=\"line\">    ]))</div><div class=\"line\">    .pipe(notify(<span class=\"string\">'hexo编译完成！'</span>));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>可以在bash里使用<code>gulp</code>来启动默认任务</p>\n<p>之前有用过gulp的同学可能会发现我gulp的src方法获取的地址只是一个文件，而且也没有指向source文件夹下的.md文件，这是因为这里根本不需要src方法来得到文件流。这里需要的只是其后的pipe方法来运行shell方法。<br>然而gulp-shell还提供了另一种方法来执行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, shell.task([</div><div class=\"line\">  <span class=\"string\">'hexo g'</span></div><div class=\"line\">]));</div></pre></td></tr></table></figure></p>\n<p>只是这样的方法却是不能接pipe方法也就不能使用notify的系统通知了。权衡之下，我选择了前者。</p>\n<h2 id=\"编写watch任务\"><a href=\"#编写watch任务\" class=\"headerlink\" title=\"编写watch任务\"></a>编写watch任务</h2><p>watch任务会监听指定文件的变更来触发默认任务<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  gulp.watch(<span class=\"string\">\"./source/*/*md\"</span>,[<span class=\"string\">'default'</span>]);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>在bash里使用<code>gulp watch</code>来启动watch任务<br>在编写完watch任务后，尽管已经解决了自动构建，但是本地调试却需要另一个bash界面来开启hexo的服务。<br>于是，我还需要一个server任务来启动服务</p>\n<h2 id=\"编写server任务\"><a href=\"#编写server任务\" class=\"headerlink\" title=\"编写server任务\"></a>编写server任务</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'server'</span>,shell.task([</div><div class=\"line\">  <span class=\"string\">'hexo server'</span></div><div class=\"line\">]));</div></pre></td></tr></table></figure>\n<p>在bash里使用 <code>gulp server</code>来启动server任务<br>于是这里就可以改写watch任务<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  gulp.start(<span class=\"string\">'server'</span>);</div><div class=\"line\">  gulp.watch(<span class=\"string\">\"./source/*/*md\"</span>,[<span class=\"string\">'default'</span>]);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>这样就可以在启动watch任务的时候也开启本地服务了。<br>到了这一步，就可以在bash命令行输入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp watch</div></pre></td></tr></table></figure></p>\n<p>回车后就可以开始边写边看了</p>\n<p><strong>这里还缺少了自动刷新的功能，这个功能使用我之前的方法并不能起到作用，还需要再思考思考</strong></p>\n<p>好了，我的第一篇技术文章就这么结束了，哈哈。</p>\n","excerpt":"","more":"<p><strong>作为一个前端，作为一个具有捣(zhuang)鼓(bi)精神的前端，心想着得有一个可以写写技术文章的地方呀！于是就开始玩起了hexo。</strong></p>\n<p>虽然说Markdown设计之初就是为了方便作者快捷的写作。但是作为一个有强迫症的前端，写了一段总想看看写成了什么样子，但无奈看一眼得切到命令行bash输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate <span class=\"comment\">//缩写 hexo g</span></div></pre></td></tr></table></figure></p>\n<p>在hexo编译完成后又切到浏览器刷新查看。心想，这不行啊，这样子怎么对得起捣(zhuang)鼓(bi)精神。于是就想着在里面加入gulp的想法。话不多说，下面就上代码。</p>\n<h2 id=\"安装gulp\"><a href=\"#安装gulp\" class=\"headerlink\" title=\"安装gulp\"></a>安装gulp</h2><p>和hexo一样gulp也是需要全局安装的<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i gulp -g</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装gulp-shell\"><a href=\"#安装gulp-shell\" class=\"headerlink\" title=\"安装gulp-shell\"></a>安装gulp-shell</h2><p>gulp并没有hexo的组件，所以这里选择使用gulp-shell来实现。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i -D gulp-shell</div></pre></td></tr></table></figure></p>\n<h2 id=\"编写gulpfile-js文件\"><a href=\"#编写gulpfile-js文件\" class=\"headerlink\" title=\"编写gulpfile.js文件\"></a>编写gulpfile.js文件</h2><p>新建并打开gulpfile.js<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim gulpfile.js</div></pre></td></tr></table></figure></p>\n<p>编写gulp代码,引入gulp、gulp-shell和gulp-notify<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> shell = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-shell'</span>);<span class=\"comment\">//bash输入</span></div><div class=\"line\"><span class=\"keyword\">var</span> notify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-notify'</span>);<span class=\"comment\">//系统通知</span></div></pre></td></tr></table></figure></p>\n<p>编写默认任务<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">\"default\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  gulp.src(<span class=\"string\">\"./public/index.html\"</span>)</div><div class=\"line\">    .pipe(shell([</div><div class=\"line\">      <span class=\"string\">'hexo g'</span></div><div class=\"line\">    ]))</div><div class=\"line\">    .pipe(notify(<span class=\"string\">'hexo编译完成！'</span>));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>可以在bash里使用<code>gulp</code>来启动默认任务</p>\n<p>之前有用过gulp的同学可能会发现我gulp的src方法获取的地址只是一个文件，而且也没有指向source文件夹下的.md文件，这是因为这里根本不需要src方法来得到文件流。这里需要的只是其后的pipe方法来运行shell方法。<br>然而gulp-shell还提供了另一种方法来执行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, shell.task([</div><div class=\"line\">  <span class=\"string\">'hexo g'</span></div><div class=\"line\">]));</div></pre></td></tr></table></figure></p>\n<p>只是这样的方法却是不能接pipe方法也就不能使用notify的系统通知了。权衡之下，我选择了前者。</p>\n<h2 id=\"编写watch任务\"><a href=\"#编写watch任务\" class=\"headerlink\" title=\"编写watch任务\"></a>编写watch任务</h2><p>watch任务会监听指定文件的变更来触发默认任务<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  gulp.watch(<span class=\"string\">\"./source/*/*md\"</span>,[<span class=\"string\">'default'</span>]);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>在bash里使用<code>gulp watch</code>来启动watch任务<br>在编写完watch任务后，尽管已经解决了自动构建，但是本地调试却需要另一个bash界面来开启hexo的服务。<br>于是，我还需要一个server任务来启动服务</p>\n<h2 id=\"编写server任务\"><a href=\"#编写server任务\" class=\"headerlink\" title=\"编写server任务\"></a>编写server任务</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'server'</span>,shell.task([</div><div class=\"line\">  <span class=\"string\">'hexo server'</span></div><div class=\"line\">]));</div></pre></td></tr></table></figure>\n<p>在bash里使用 <code>gulp server</code>来启动server任务<br>于是这里就可以改写watch任务<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  gulp.start(<span class=\"string\">'server'</span>);</div><div class=\"line\">  gulp.watch(<span class=\"string\">\"./source/*/*md\"</span>,[<span class=\"string\">'default'</span>]);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>这样就可以在启动watch任务的时候也开启本地服务了。<br>到了这一步，就可以在bash命令行输入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp watch</div></pre></td></tr></table></figure></p>\n<p>回车后就可以开始边写边看了</p>\n<p><strong>这里还缺少了自动刷新的功能，这个功能使用我之前的方法并不能起到作用，还需要再思考思考</strong></p>\n<p>好了，我的第一篇技术文章就这么结束了，哈哈。</p>\n"},{"title":"git入门级--在github创建项目","date":"2016-06-02T13:42:13.000Z","_content":"## git分布式版本控制系统\n我第一个接触的版本控制系统是svn，当时觉得版本控制就是这样，直到我遇到了git...\ngit是分布式版本控制系统，合适分布式开发，强调个体。速度快、灵活，代码冲突了也比较好解决，最让我喜欢的还是git的分支切换。\n## 在github上创建一个空项目\n我这里git的远程仓库选择[github](https://github.com/)，github是全球最大的代码托管库，在国内也有许多类似的站点可以选用（比如：[coding](https://coding.net)）。\n* 这里假定已经有了github账号。登录github点击右上角的加号，选择new repository选项新建一个项目。\n![新建项目](/img/git-1/2016-06-02_201840.png )\n\n* 填写新项目的基本信息：\n新的项目名称，描述，其他默认，然后点击create repository按钮新建项目\n![填写新项目基本信息](/img/git-1/2016-06-02_202425.png)\n\n* 克隆新项目至本地\n点击README按钮，去编辑README文件。\n![新建README文件](/img/git-1/2016-06-02_203556.png)\n写下hello world，然后到页面最下方点击commit new file按钮。\n![hello world](/img/git-1/2016-06-02_204015.png)\n点击use https 然后点复制按钮\n![复制](/img/git-1/2016-06-02_204340.png)\n去你的本地文件夹，打开git bash。输入命令\n```bash\ngit clone <刚才复制的项目地址>\n```\n![git bash](/img/git-1/2005796-ec0fa26bc9843e66.png)\n如果还没安装git，可以自行百度[下载git](https://www.baidu.com/link?url=3rT5SSGCqN8J3w0rw8T7fHKvTEZ6NiYfDK5sxYGK5GCTeEp3A0ufmhe8YVi0-zGiMpcEIk2ibq0s1J-z_Ys8x5VLcpDCwbgvNEE7RBVBj6O&wd=&eqid=a85caa0700009e1500000004575021d8)，安装无脑，一路下一步就好。\n到此为止，新的项目就好了。\n![Paste_Image.png](/img/git-1/2016-06-02_205620.png)\n\n## 提交 (commit)\n进入新建的项目文件夹，就可以开始你的代码了。\n![demo文件夹](/img/git-1/2016-06-02_210116.png)\n这里为了方便，假定已经在项目里写了一段代码。准备提交至远端代码仓库。进入项目文件夹，输入命令：\n```bash\n git status\n```\n![git status](/img/git-1/2016-06-02_210744.png)\n添加更改的代码\n```bash\ngit add .\n```\n![git add .](/img/git-1/2016-06-02_211044.png)\n提交代码\n```bash\ngit commit -m \"提交代码\"\n```\n![提交代码](/img/git-1/2016-06-02_211323.png)\nlog命令可以查看提交历史\n```bash\ngit log\n```\n![Paste_Image.png](/img/git-1/2016-06-02_211555.png)\n## 推送提交至远程分支push\n```bash\ngit push origin master\n```\n![push](/img/git-1/2016-06-02_211758.png)\n至此就完成了git的首次提交\n![](/img/git-1/2016-06-02_211908.png)\n## 补充\n这里使用的bash是[git(戳这里下载)](https://www.baidu.com/link?url=3rT5SSGCqN8J3w0rw8T7fHKvTEZ6NiYfDK5sxYGK5GCTeEp3A0ufmhe8YVi0-zGiMpcEIk2ibq0s1J-z_Ys8x5VLcpDCwbgvNEE7RBVBj6O&wd=&eqid=a85caa0700009e1500000004575021d8)自带的，如果觉得打命令搞不懂，可以试试图形化界面(例如：sourcetree)","source":"_posts/git入门级-在github创建项目.md","raw":"---\ntitle: git入门级--在github创建项目\ndate: 2016-06-02 21:42:13\ntags:\n---\n## git分布式版本控制系统\n我第一个接触的版本控制系统是svn，当时觉得版本控制就是这样，直到我遇到了git...\ngit是分布式版本控制系统，合适分布式开发，强调个体。速度快、灵活，代码冲突了也比较好解决，最让我喜欢的还是git的分支切换。\n## 在github上创建一个空项目\n我这里git的远程仓库选择[github](https://github.com/)，github是全球最大的代码托管库，在国内也有许多类似的站点可以选用（比如：[coding](https://coding.net)）。\n* 这里假定已经有了github账号。登录github点击右上角的加号，选择new repository选项新建一个项目。\n![新建项目](/img/git-1/2016-06-02_201840.png )\n\n* 填写新项目的基本信息：\n新的项目名称，描述，其他默认，然后点击create repository按钮新建项目\n![填写新项目基本信息](/img/git-1/2016-06-02_202425.png)\n\n* 克隆新项目至本地\n点击README按钮，去编辑README文件。\n![新建README文件](/img/git-1/2016-06-02_203556.png)\n写下hello world，然后到页面最下方点击commit new file按钮。\n![hello world](/img/git-1/2016-06-02_204015.png)\n点击use https 然后点复制按钮\n![复制](/img/git-1/2016-06-02_204340.png)\n去你的本地文件夹，打开git bash。输入命令\n```bash\ngit clone <刚才复制的项目地址>\n```\n![git bash](/img/git-1/2005796-ec0fa26bc9843e66.png)\n如果还没安装git，可以自行百度[下载git](https://www.baidu.com/link?url=3rT5SSGCqN8J3w0rw8T7fHKvTEZ6NiYfDK5sxYGK5GCTeEp3A0ufmhe8YVi0-zGiMpcEIk2ibq0s1J-z_Ys8x5VLcpDCwbgvNEE7RBVBj6O&wd=&eqid=a85caa0700009e1500000004575021d8)，安装无脑，一路下一步就好。\n到此为止，新的项目就好了。\n![Paste_Image.png](/img/git-1/2016-06-02_205620.png)\n\n## 提交 (commit)\n进入新建的项目文件夹，就可以开始你的代码了。\n![demo文件夹](/img/git-1/2016-06-02_210116.png)\n这里为了方便，假定已经在项目里写了一段代码。准备提交至远端代码仓库。进入项目文件夹，输入命令：\n```bash\n git status\n```\n![git status](/img/git-1/2016-06-02_210744.png)\n添加更改的代码\n```bash\ngit add .\n```\n![git add .](/img/git-1/2016-06-02_211044.png)\n提交代码\n```bash\ngit commit -m \"提交代码\"\n```\n![提交代码](/img/git-1/2016-06-02_211323.png)\nlog命令可以查看提交历史\n```bash\ngit log\n```\n![Paste_Image.png](/img/git-1/2016-06-02_211555.png)\n## 推送提交至远程分支push\n```bash\ngit push origin master\n```\n![push](/img/git-1/2016-06-02_211758.png)\n至此就完成了git的首次提交\n![](/img/git-1/2016-06-02_211908.png)\n## 补充\n这里使用的bash是[git(戳这里下载)](https://www.baidu.com/link?url=3rT5SSGCqN8J3w0rw8T7fHKvTEZ6NiYfDK5sxYGK5GCTeEp3A0ufmhe8YVi0-zGiMpcEIk2ibq0s1J-z_Ys8x5VLcpDCwbgvNEE7RBVBj6O&wd=&eqid=a85caa0700009e1500000004575021d8)自带的，如果觉得打命令搞不懂，可以试试图形化界面(例如：sourcetree)","slug":"git入门级-在github创建项目","published":1,"updated":"2016-08-30T15:49:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cityijzg80002ghxm1v69ilxp","content":"<h2 id=\"git分布式版本控制系统\"><a href=\"#git分布式版本控制系统\" class=\"headerlink\" title=\"git分布式版本控制系统\"></a>git分布式版本控制系统</h2><p>我第一个接触的版本控制系统是svn，当时觉得版本控制就是这样，直到我遇到了git…<br>git是分布式版本控制系统，合适分布式开发，强调个体。速度快、灵活，代码冲突了也比较好解决，最让我喜欢的还是git的分支切换。</p>\n<h2 id=\"在github上创建一个空项目\"><a href=\"#在github上创建一个空项目\" class=\"headerlink\" title=\"在github上创建一个空项目\"></a>在github上创建一个空项目</h2><p>我这里git的远程仓库选择<a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">github</a>，github是全球最大的代码托管库，在国内也有许多类似的站点可以选用（比如：<a href=\"https://coding.net\" target=\"_blank\" rel=\"external\">coding</a>）。</p>\n<ul>\n<li><p>这里假定已经有了github账号。登录github点击右上角的加号，选择new repository选项新建一个项目。<br><img src=\"/img/git-1/2016-06-02_201840.png\" alt=\"新建项目\"></p>\n</li>\n<li><p>填写新项目的基本信息：<br>新的项目名称，描述，其他默认，然后点击create repository按钮新建项目<br><img src=\"/img/git-1/2016-06-02_202425.png\" alt=\"填写新项目基本信息\"></p>\n</li>\n<li><p>克隆新项目至本地<br>点击README按钮，去编辑README文件。<br><img src=\"/img/git-1/2016-06-02_203556.png\" alt=\"新建README文件\"><br>写下hello world，然后到页面最下方点击commit new file按钮。<br><img src=\"/img/git-1/2016-06-02_204015.png\" alt=\"hello world\"><br>点击use https 然后点复制按钮<br><img src=\"/img/git-1/2016-06-02_204340.png\" alt=\"复制\"><br>去你的本地文件夹，打开git bash。输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> &lt;刚才复制的项目地址&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"/img/git-1/2005796-ec0fa26bc9843e66.png\" alt=\"git bash\"><br>如果还没安装git，可以自行百度<a href=\"https://www.baidu.com/link?url=3rT5SSGCqN8J3w0rw8T7fHKvTEZ6NiYfDK5sxYGK5GCTeEp3A0ufmhe8YVi0-zGiMpcEIk2ibq0s1J-z_Ys8x5VLcpDCwbgvNEE7RBVBj6O&amp;wd=&amp;eqid=a85caa0700009e1500000004575021d8\" target=\"_blank\" rel=\"external\">下载git</a>，安装无脑，一路下一步就好。<br>到此为止，新的项目就好了。<br><img src=\"/img/git-1/2016-06-02_205620.png\" alt=\"Paste_Image.png\"></p>\n<h2 id=\"提交-commit\"><a href=\"#提交-commit\" class=\"headerlink\" title=\"提交 (commit)\"></a>提交 (commit)</h2><p>进入新建的项目文件夹，就可以开始你的代码了。<br><img src=\"/img/git-1/2016-06-02_210116.png\" alt=\"demo文件夹\"><br>这里为了方便，假定已经在项目里写了一段代码。准备提交至远端代码仓库。进入项目文件夹，输入命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status</div></pre></td></tr></table></figure></p>\n<p><img src=\"/img/git-1/2016-06-02_210744.png\" alt=\"git status\"><br>添加更改的代码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div></pre></td></tr></table></figure></p>\n<p><img src=\"/img/git-1/2016-06-02_211044.png\" alt=\"git add .\"><br>提交代码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m <span class=\"string\">\"提交代码\"</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"/img/git-1/2016-06-02_211323.png\" alt=\"提交代码\"><br>log命令可以查看提交历史<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">log</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"/img/git-1/2016-06-02_211555.png\" alt=\"Paste_Image.png\"></p>\n<h2 id=\"推送提交至远程分支push\"><a href=\"#推送提交至远程分支push\" class=\"headerlink\" title=\"推送提交至远程分支push\"></a>推送提交至远程分支push</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure>\n<p><img src=\"/img/git-1/2016-06-02_211758.png\" alt=\"push\"><br>至此就完成了git的首次提交<br><img src=\"/img/git-1/2016-06-02_211908.png\" alt=\"\"></p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>这里使用的bash是<a href=\"https://www.baidu.com/link?url=3rT5SSGCqN8J3w0rw8T7fHKvTEZ6NiYfDK5sxYGK5GCTeEp3A0ufmhe8YVi0-zGiMpcEIk2ibq0s1J-z_Ys8x5VLcpDCwbgvNEE7RBVBj6O&amp;wd=&amp;eqid=a85caa0700009e1500000004575021d8\" target=\"_blank\" rel=\"external\">git(戳这里下载)</a>自带的，如果觉得打命令搞不懂，可以试试图形化界面(例如：sourcetree)</p>\n","excerpt":"","more":"<h2 id=\"git分布式版本控制系统\"><a href=\"#git分布式版本控制系统\" class=\"headerlink\" title=\"git分布式版本控制系统\"></a>git分布式版本控制系统</h2><p>我第一个接触的版本控制系统是svn，当时觉得版本控制就是这样，直到我遇到了git…<br>git是分布式版本控制系统，合适分布式开发，强调个体。速度快、灵活，代码冲突了也比较好解决，最让我喜欢的还是git的分支切换。</p>\n<h2 id=\"在github上创建一个空项目\"><a href=\"#在github上创建一个空项目\" class=\"headerlink\" title=\"在github上创建一个空项目\"></a>在github上创建一个空项目</h2><p>我这里git的远程仓库选择<a href=\"https://github.com/\">github</a>，github是全球最大的代码托管库，在国内也有许多类似的站点可以选用（比如：<a href=\"https://coding.net\">coding</a>）。</p>\n<ul>\n<li><p>这里假定已经有了github账号。登录github点击右上角的加号，选择new repository选项新建一个项目。<br><img src=\"/img/git-1/2016-06-02_201840.png\" alt=\"新建项目\"></p>\n</li>\n<li><p>填写新项目的基本信息：<br>新的项目名称，描述，其他默认，然后点击create repository按钮新建项目<br><img src=\"/img/git-1/2016-06-02_202425.png\" alt=\"填写新项目基本信息\"></p>\n</li>\n<li><p>克隆新项目至本地<br>点击README按钮，去编辑README文件。<br><img src=\"/img/git-1/2016-06-02_203556.png\" alt=\"新建README文件\"><br>写下hello world，然后到页面最下方点击commit new file按钮。<br><img src=\"/img/git-1/2016-06-02_204015.png\" alt=\"hello world\"><br>点击use https 然后点复制按钮<br><img src=\"/img/git-1/2016-06-02_204340.png\" alt=\"复制\"><br>去你的本地文件夹，打开git bash。输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> &lt;刚才复制的项目地址&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"/img/git-1/2005796-ec0fa26bc9843e66.png\" alt=\"git bash\"><br>如果还没安装git，可以自行百度<a href=\"https://www.baidu.com/link?url=3rT5SSGCqN8J3w0rw8T7fHKvTEZ6NiYfDK5sxYGK5GCTeEp3A0ufmhe8YVi0-zGiMpcEIk2ibq0s1J-z_Ys8x5VLcpDCwbgvNEE7RBVBj6O&amp;wd=&amp;eqid=a85caa0700009e1500000004575021d8\">下载git</a>，安装无脑，一路下一步就好。<br>到此为止，新的项目就好了。<br><img src=\"/img/git-1/2016-06-02_205620.png\" alt=\"Paste_Image.png\"></p>\n<h2 id=\"提交-commit\"><a href=\"#提交-commit\" class=\"headerlink\" title=\"提交 (commit)\"></a>提交 (commit)</h2><p>进入新建的项目文件夹，就可以开始你的代码了。<br><img src=\"/img/git-1/2016-06-02_210116.png\" alt=\"demo文件夹\"><br>这里为了方便，假定已经在项目里写了一段代码。准备提交至远端代码仓库。进入项目文件夹，输入命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status</div></pre></td></tr></table></figure></p>\n<p><img src=\"/img/git-1/2016-06-02_210744.png\" alt=\"git status\"><br>添加更改的代码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div></pre></td></tr></table></figure></p>\n<p><img src=\"/img/git-1/2016-06-02_211044.png\" alt=\"git add .\"><br>提交代码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m <span class=\"string\">\"提交代码\"</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"/img/git-1/2016-06-02_211323.png\" alt=\"提交代码\"><br>log命令可以查看提交历史<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">log</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"/img/git-1/2016-06-02_211555.png\" alt=\"Paste_Image.png\"></p>\n<h2 id=\"推送提交至远程分支push\"><a href=\"#推送提交至远程分支push\" class=\"headerlink\" title=\"推送提交至远程分支push\"></a>推送提交至远程分支push</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure>\n<p><img src=\"/img/git-1/2016-06-02_211758.png\" alt=\"push\"><br>至此就完成了git的首次提交<br><img src=\"/img/git-1/2016-06-02_211908.png\" alt=\"\"></p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>这里使用的bash是<a href=\"https://www.baidu.com/link?url=3rT5SSGCqN8J3w0rw8T7fHKvTEZ6NiYfDK5sxYGK5GCTeEp3A0ufmhe8YVi0-zGiMpcEIk2ibq0s1J-z_Ys8x5VLcpDCwbgvNEE7RBVBj6O&amp;wd=&amp;eqid=a85caa0700009e1500000004575021d8\">git(戳这里下载)</a>自带的，如果觉得打命令搞不懂，可以试试图形化界面(例如：sourcetree)</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-08-30T15:49:24.000Z","updated":"2016-08-30T15:49:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cityijzga0003ghxmfag00tx8","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"hexo 基础操作","date":"2016-05-07T06:36:28.000Z","_content":"# 安装hexo\n\n``` bash\n命令：npm install-g hexo\n```\n\n创建项目文件夹 eg: leenty.github.io\n \n进入文件夹 初始化hexo\n\n``` bash\n命令：hexo init\n```\n\n几秒钟后你的hexo项目就创建好了\n\n接下来就可以看看这个项目了，在此之前需要先生成静态页面。\n使用new来创建文章\n```bash\n命令：hexo new [layout] <title>\n```\n新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n``` bash \n命令：hexo generate (缩写：hexo g)\n```\n\n进入文件观察模式，实时编译你的文章\n```bash \n命令：hexo generate --watch (缩写：hexo g -w)\n```\n\n开始本地预览服务\n```bash\n命令：hexo server\n```\n指定地址开启预览\n```bash\n命令：hexo server -i localhost -p 4000\n```\n\n部署\n```bash\nhexo deploy (缩写：hexo D)\n```\n\n## 进阶：\n利用package.json的scripts来搞点事情\n```javaScript\n\"scripts\": {\n    \"server\": \"hexo server -i localhost -p 4000\",\n    \"watch\": \"hexo g -w\",\n    \"deploy\":\"hexo D\",\n    \"dev\": \"npm run server && npm run watch\"\n}\n```\n将上述代码写在package.json里，就可以通过```npm run server```来开启服务\n通过```npm run watch```来启动文件观察模式\n通过```npm run deploy```来部署博客\n当然，最最主要的是可以通过```npm run dev```同时开启服务和观察模式\n","source":"_posts/hexo-基础操作.md","raw":"---\ntitle: hexo 基础操作\ndate: 2016-05-07 14:36:28\ntags:\n---\n# 安装hexo\n\n``` bash\n命令：npm install-g hexo\n```\n\n创建项目文件夹 eg: leenty.github.io\n \n进入文件夹 初始化hexo\n\n``` bash\n命令：hexo init\n```\n\n几秒钟后你的hexo项目就创建好了\n\n接下来就可以看看这个项目了，在此之前需要先生成静态页面。\n使用new来创建文章\n```bash\n命令：hexo new [layout] <title>\n```\n新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n``` bash \n命令：hexo generate (缩写：hexo g)\n```\n\n进入文件观察模式，实时编译你的文章\n```bash \n命令：hexo generate --watch (缩写：hexo g -w)\n```\n\n开始本地预览服务\n```bash\n命令：hexo server\n```\n指定地址开启预览\n```bash\n命令：hexo server -i localhost -p 4000\n```\n\n部署\n```bash\nhexo deploy (缩写：hexo D)\n```\n\n## 进阶：\n利用package.json的scripts来搞点事情\n```javaScript\n\"scripts\": {\n    \"server\": \"hexo server -i localhost -p 4000\",\n    \"watch\": \"hexo g -w\",\n    \"deploy\":\"hexo D\",\n    \"dev\": \"npm run server && npm run watch\"\n}\n```\n将上述代码写在package.json里，就可以通过```npm run server```来开启服务\n通过```npm run watch```来启动文件观察模式\n通过```npm run deploy```来部署博客\n当然，最最主要的是可以通过```npm run dev```同时开启服务和观察模式\n","slug":"hexo-基础操作","published":1,"updated":"2016-09-26T16:29:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cityijzgb0004ghxmd50dh6pp","content":"<h1 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：npm install-g hexo</div></pre></td></tr></table></figure>\n<p>创建项目文件夹 eg: leenty.github.io</p>\n<p>进入文件夹 初始化hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo init</div></pre></td></tr></table></figure>\n<p>几秒钟后你的hexo项目就创建好了</p>\n<p>接下来就可以看看这个项目了，在此之前需要先生成静态页面。<br>使用new来创建文章<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure></p>\n<p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo generate (缩写：hexo g)</div></pre></td></tr></table></figure>\n<p>进入文件观察模式，实时编译你的文章<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo generate --watch (缩写：hexo g -w)</div></pre></td></tr></table></figure></p>\n<p>开始本地预览服务<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo server</div></pre></td></tr></table></figure></p>\n<p>指定地址开启预览<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo server -i localhost -p 4000</div></pre></td></tr></table></figure></p>\n<p>部署<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy (缩写：hexo D)</div></pre></td></tr></table></figure></p>\n<h2 id=\"进阶：\"><a href=\"#进阶：\" class=\"headerlink\" title=\"进阶：\"></a>进阶：</h2><p>利用package.json的scripts来搞点事情<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"server\"</span>: <span class=\"string\">\"hexo server -i localhost -p 4000\"</span>,</div><div class=\"line\">    <span class=\"string\">\"watch\"</span>: <span class=\"string\">\"hexo g -w\"</span>,</div><div class=\"line\">    <span class=\"string\">\"deploy\"</span>:<span class=\"string\">\"hexo D\"</span>,</div><div class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"npm run server &amp;&amp; npm run watch\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>将上述代码写在package.json里，就可以通过<code>npm run server</code>来开启服务<br>通过<code>npm run watch</code>来启动文件观察模式<br>通过<code>npm run deploy</code>来部署博客<br>当然，最最主要的是可以通过<code>npm run dev</code>同时开启服务和观察模式</p>\n","excerpt":"","more":"<h1 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：npm install-g hexo</div></pre></td></tr></table></figure>\n<p>创建项目文件夹 eg: leenty.github.io</p>\n<p>进入文件夹 初始化hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo init</div></pre></td></tr></table></figure>\n<p>几秒钟后你的hexo项目就创建好了</p>\n<p>接下来就可以看看这个项目了，在此之前需要先生成静态页面。<br>使用new来创建文章<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure></p>\n<p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo generate (缩写：hexo g)</div></pre></td></tr></table></figure>\n<p>进入文件观察模式，实时编译你的文章<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo generate --watch (缩写：hexo g -w)</div></pre></td></tr></table></figure></p>\n<p>开始本地预览服务<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo server</div></pre></td></tr></table></figure></p>\n<p>指定地址开启预览<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令：hexo server -i localhost -p 4000</div></pre></td></tr></table></figure></p>\n<p>部署<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy (缩写：hexo D)</div></pre></td></tr></table></figure></p>\n<h2 id=\"进阶：\"><a href=\"#进阶：\" class=\"headerlink\" title=\"进阶：\"></a>进阶：</h2><p>利用package.json的scripts来搞点事情<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"server\"</span>: <span class=\"string\">\"hexo server -i localhost -p 4000\"</span>,</div><div class=\"line\">    <span class=\"string\">\"watch\"</span>: <span class=\"string\">\"hexo g -w\"</span>,</div><div class=\"line\">    <span class=\"string\">\"deploy\"</span>:<span class=\"string\">\"hexo D\"</span>,</div><div class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"npm run server &amp;&amp; npm run watch\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>将上述代码写在package.json里，就可以通过<code>npm run server</code>来开启服务<br>通过<code>npm run watch</code>来启动文件观察模式<br>通过<code>npm run deploy</code>来部署博客<br>当然，最最主要的是可以通过<code>npm run dev</code>同时开启服务和观察模式</p>\n"},{"title":"晒一晒我的prefernces.sublime-setting","date":"2016-10-06T15:22:02.000Z","_content":"## 推荐正在用的一个不错的sublime UI美化界面\n![prefernces-sublime-setting](/img/prefernces-sublime-setting.png)\n\n### 主题地址\n[equinusocio/material-theme](https://github.com/equinusocio/material-theme)\n```json\n{\n\t\"always_show_minimap_viewport\": true,\n\t\"color_scheme\": \"Packages/Material Theme/schemes/Material-Theme.tmTheme\",\n\t\"file_exclude_patterns\":\n\t[\n\t\t\".DS_Store\"\n\t],\n\t\"folder_exclude_patterns\":\n\t[\n\t\t\".git\",\n\t\t\"node_modules\",\n\t\t\"public/static\"\n\t],\n\t\"font_size\": 12,\n\t\"ignored_packages\":\n\t[\n\t\t\"Vintage\"\n\t],\n\t\"line_padding_bottom\": 3,\n\t\"line_padding_top\": 3,\n\t\"material_theme_accent_sky\": true,\n\t\"material_theme_compact_sidebar\": true,\n\t\"material_theme_contrast_mode\": true,\n\t\"material_theme_disable_tree_indicator\": true,\n\t\"material_theme_panel_separator\": true,\n\t\"material_theme_small_statusbar\": true,\n\t\"material_theme_small_tab\": true,\n\t\"material_theme_tabs_autowidth\": true,\n\t\"material_theme_tabs_separator\": true,\n\t\"material_theme_tree_headings\": true,\n\t\"overlay_scroll_bars\": \"enabled\",\n\t\"tab_size\": 2,\n\t\"theme\": \"Material-Theme.sublime-theme\",\n\t\"translate_tabs_to_spaces\": true,\n\t\"word_warp\": \"auto\"\n}\n```\n\n","source":"_posts/晒一晒我的prefernces-sublime-setting.md","raw":"---\ntitle: 晒一晒我的prefernces.sublime-setting\ndate: 2016-10-06 23:22:02\ntags:\n---\n## 推荐正在用的一个不错的sublime UI美化界面\n![prefernces-sublime-setting](/img/prefernces-sublime-setting.png)\n\n### 主题地址\n[equinusocio/material-theme](https://github.com/equinusocio/material-theme)\n```json\n{\n\t\"always_show_minimap_viewport\": true,\n\t\"color_scheme\": \"Packages/Material Theme/schemes/Material-Theme.tmTheme\",\n\t\"file_exclude_patterns\":\n\t[\n\t\t\".DS_Store\"\n\t],\n\t\"folder_exclude_patterns\":\n\t[\n\t\t\".git\",\n\t\t\"node_modules\",\n\t\t\"public/static\"\n\t],\n\t\"font_size\": 12,\n\t\"ignored_packages\":\n\t[\n\t\t\"Vintage\"\n\t],\n\t\"line_padding_bottom\": 3,\n\t\"line_padding_top\": 3,\n\t\"material_theme_accent_sky\": true,\n\t\"material_theme_compact_sidebar\": true,\n\t\"material_theme_contrast_mode\": true,\n\t\"material_theme_disable_tree_indicator\": true,\n\t\"material_theme_panel_separator\": true,\n\t\"material_theme_small_statusbar\": true,\n\t\"material_theme_small_tab\": true,\n\t\"material_theme_tabs_autowidth\": true,\n\t\"material_theme_tabs_separator\": true,\n\t\"material_theme_tree_headings\": true,\n\t\"overlay_scroll_bars\": \"enabled\",\n\t\"tab_size\": 2,\n\t\"theme\": \"Material-Theme.sublime-theme\",\n\t\"translate_tabs_to_spaces\": true,\n\t\"word_warp\": \"auto\"\n}\n```\n\n","slug":"晒一晒我的prefernces-sublime-setting","published":1,"updated":"2016-10-06T15:30:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cityijzge0005ghxman6ailto","content":"<h2 id=\"推荐正在用的一个不错的sublime-UI美化界面\"><a href=\"#推荐正在用的一个不错的sublime-UI美化界面\" class=\"headerlink\" title=\"推荐正在用的一个不错的sublime UI美化界面\"></a>推荐正在用的一个不错的sublime UI美化界面</h2><p><img src=\"/img/prefernces-sublime-setting.png\" alt=\"prefernces-sublime-setting\"></p>\n<h3 id=\"主题地址\"><a href=\"#主题地址\" class=\"headerlink\" title=\"主题地址\"></a>主题地址</h3><p><a href=\"https://github.com/equinusocio/material-theme\" target=\"_blank\" rel=\"external\">equinusocio/material-theme</a><br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"always_show_minimap_viewport\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"color_scheme\"</span>: <span class=\"string\">\"Packages/Material Theme/schemes/Material-Theme.tmTheme\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"file_exclude_patterns\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\".DS_Store\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"folder_exclude_patterns\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\".git\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"node_modules\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"public/static\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"font_size\"</span>: <span class=\"number\">12</span>,</div><div class=\"line\">\t<span class=\"attr\">\"ignored_packages\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\"Vintage\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"line_padding_bottom\"</span>: <span class=\"number\">3</span>,</div><div class=\"line\">\t<span class=\"attr\">\"line_padding_top\"</span>: <span class=\"number\">3</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_accent_sky\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_compact_sidebar\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_contrast_mode\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_disable_tree_indicator\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_panel_separator\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_small_statusbar\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_small_tab\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_tabs_autowidth\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_tabs_separator\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_tree_headings\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"overlay_scroll_bars\"</span>: <span class=\"string\">\"enabled\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"tab_size\"</span>: <span class=\"number\">2</span>,</div><div class=\"line\">\t<span class=\"attr\">\"theme\"</span>: <span class=\"string\">\"Material-Theme.sublime-theme\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"translate_tabs_to_spaces\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"word_warp\"</span>: <span class=\"string\">\"auto\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h2 id=\"推荐正在用的一个不错的sublime-UI美化界面\"><a href=\"#推荐正在用的一个不错的sublime-UI美化界面\" class=\"headerlink\" title=\"推荐正在用的一个不错的sublime UI美化界面\"></a>推荐正在用的一个不错的sublime UI美化界面</h2><p><img src=\"/img/prefernces-sublime-setting.png\" alt=\"prefernces-sublime-setting\"></p>\n<h3 id=\"主题地址\"><a href=\"#主题地址\" class=\"headerlink\" title=\"主题地址\"></a>主题地址</h3><p><a href=\"https://github.com/equinusocio/material-theme\">equinusocio/material-theme</a><br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"always_show_minimap_viewport\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"color_scheme\"</span>: <span class=\"string\">\"Packages/Material Theme/schemes/Material-Theme.tmTheme\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"file_exclude_patterns\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\".DS_Store\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"folder_exclude_patterns\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\".git\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"node_modules\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"public/static\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"font_size\"</span>: <span class=\"number\">12</span>,</div><div class=\"line\">\t<span class=\"attr\">\"ignored_packages\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\"Vintage\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"line_padding_bottom\"</span>: <span class=\"number\">3</span>,</div><div class=\"line\">\t<span class=\"attr\">\"line_padding_top\"</span>: <span class=\"number\">3</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_accent_sky\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_compact_sidebar\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_contrast_mode\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_disable_tree_indicator\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_panel_separator\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_small_statusbar\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_small_tab\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_tabs_autowidth\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_tabs_separator\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"material_theme_tree_headings\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"overlay_scroll_bars\"</span>: <span class=\"string\">\"enabled\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"tab_size\"</span>: <span class=\"number\">2</span>,</div><div class=\"line\">\t<span class=\"attr\">\"theme\"</span>: <span class=\"string\">\"Material-Theme.sublime-theme\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"translate_tabs_to_spaces\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"word_warp\"</span>: <span class=\"string\">\"auto\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}